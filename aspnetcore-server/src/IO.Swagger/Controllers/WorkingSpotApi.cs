/*
 * Room Reservation API
 *
 * A Simple IP Address API
 *
 * OpenAPI spec version: 0.1.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;

namespace IO.Swagger.Controllers
{
	[Route("api/[controller]")]
    [ApiController]
    public class WorkingSpotApiController : ControllerBase
    {
        private readonly ProjectContext _context;

        public WorkingSpotApiController(ProjectContext context)
        {
            _context = context;
        }
        /// <summary>
        /// Returns a list of workingSpot
        /// </summary>
        /// <response code="200">An array workingSpot</response>
        /// <response code="404">Working Spot not found</response>
        [HttpGet]
        [Route("/api/workingSpots")]
        [ValidateModelState]
        [SwaggerOperation("WorkingSpotsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<WorkingSpot>), description: "An array workingSpot")]
        public async Task<ActionResult<IEnumerable<WorkingSpot>>>  WorkingSpotsGet()
        {
            var spots = await _context.WorkingSpots
           .Include(spot => spot.WorkingSpotReservations)
               .ThenInclude(reservation => reservation.User)
           .Include(spot => spot.Location)
               .ThenInclude(location => location.City)
           .AsNoTracking().ToListAsync();

            if (spots == null)
            {
                return NotFound();
            }

            return spots;
        }
    }
}
