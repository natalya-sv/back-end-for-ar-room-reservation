/*
 * Room Reservation API
 *
 * A Simple IP Address API
 *
 * OpenAPI spec version: 0.1.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using IO.Swagger.Models;
using Microsoft.EntityFrameworkCore;

namespace IO.Swagger
{
	public class ProjectContext : DbContext
	{
		public ProjectContext(DbContextOptions<ProjectContext> options) : base(options)
		{

		}
		public DbSet<MeetingRoom> MeetingRooms { get; set; }
		public DbSet<MeetingRoomReservation> MeetingRoomReservations { get; set; }
		public DbSet<MeetingRoomImage> MeetingRoomImages { get; set; }
		public DbSet<User> Users { get; set; }
		public DbSet<Location> Locations { get; set; }
		public DbSet<WorkingSpot> WorkingSpots { get; set; }
		public DbSet<WorkingSpotReservation> WorkingSpotReservations { get; set; }
		public DbSet<City> Cities { get; set; }
		public DbSet<Job> Jobs { get; set; }
		protected override void OnModelCreating(ModelBuilder modelBuilder)
		{
			modelBuilder.Entity<MeetingRoom>().ToTable("MeetingRoom");
			modelBuilder.Entity<MeetingRoomReservation>().ToTable("MeetingRoomReservation");
			modelBuilder.Entity<MeetingRoomReservation>()
				.HasKey(m => new { m.MeetingDate, m.StartTime, m.EndTime, m.MeetingRoomId });

			modelBuilder.Entity<MeetingRoomImage>().ToTable("MeetingRoomImage");
		
			modelBuilder.Entity<User>().ToTable("User");
			modelBuilder.Entity<Location>().ToTable("Location");
			modelBuilder.Entity<Job>().ToTable("Job");
			modelBuilder.Entity<City>().ToTable("City");
			modelBuilder.Entity<WorkingSpot>().ToTable("WorkingSpot");
			modelBuilder.Entity<WorkingSpotReservation>().ToTable("WorkingSpotReservation");
			modelBuilder.Entity<WorkingSpotReservation>()
				.HasKey(w => new { w.WorkingSpotId, w.ReservationDate });
		}
	}
}
